hotkey('x', 'escape_screen(); assignin(''caller'',''continue_'',false);');

dashboard(1,'This task presents a list of images as if it is a movie.');
dashboard(2,'Press ''x'' to quit.',[1 0 0]);
bhv_code(100,'Blank',101,'Round 1',102,'Round 2',103,'Round 3',104,'Round 4',105,'Round 5',106,'Round 6');

fixation_point = 1;  % TaskObject #1

% The unit of the image duration is the number of frames in this adapter.
% See LBC_ImageChanger, if you want to use milliseconds as a time unit.
img = ImageChanger(null_);

% ImageList is a n-by-5 cell matrix. Column 3-5 can be optional. In that
% case, you can assign just a n-by-2 matrix. If you want to assign Column 4
% or 5, you have to assign Column 3 and 4 as well.
%
% The 1st column is image filenames.
% The 2nd column is image positions in visual angles.
% The 3rd column is image durations in frames. Inf, by default.
% The 4th column is eventmarkers.
% The 5th column is the resize parameter, [Xsize Ysize] in pixels.
img.ImageList = { '', [], 60, 100; ...
    {'A.bmp','C.bmp'}, [5 5; -5 -5], 1, 101; ...
    {'B.bmp','D.bmp'}, [5 5; -5 -5], 1, []; ...
    {'C.bmp','A.bmp'}, [5 5; -5 -5], 1, []; ...
    {'D.bmp','B.bmp'}, [5 5; -5 -5], 1, []; ...
    {'A.bmp','C.bmp'}, [5 5; -5 -5], 1, 102; ...
    {'B.bmp','D.bmp'}, [5 5; -5 -5], 1, []; ...
    {'C.bmp','A.bmp'}, [5 5; -5 -5], 1, []; ...
    {'D.bmp','B.bmp'}, [5 5; -5 -5], 1, []; ...
    {'A.bmp','C.bmp'}, [5 5; -5 -5], 1, 103; ...
    {'B.bmp','D.bmp'}, [5 5; -5 -5], 1, []; ...
    {'C.bmp','A.bmp'}, [5 5; -5 -5], 1, []; ...
    {'D.bmp','B.bmp'}, [5 5; -5 -5], 1, []; ...
    {'A.bmp','C.bmp'}, [5 5; -5 -5], 1, 104; ...
    {'B.bmp','D.bmp'}, [5 5; -5 -5], 1, []; ...
    {'C.bmp','A.bmp'}, [5 5; -5 -5], 1, []; ...
    {'D.bmp','B.bmp'}, [5 5; -5 -5], 1, []; ...
    {'A.bmp','C.bmp'}, [5 5; -5 -5], 1, 105; ...
    {'B.bmp','D.bmp'}, [5 5; -5 -5], 1, []; ...
    {'C.bmp','A.bmp'}, [5 5; -5 -5], 1, []; ...
    {'D.bmp','B.bmp'}, [5 5; -5 -5], 1, []; ...
    {'A.bmp','C.bmp'}, [5 5; -5 -5], 1, 106; ...
    {'B.bmp','D.bmp'}, [5 5; -5 -5], 1, []; ...
    {'C.bmp','A.bmp'}, [5 5; -5 -5], 1, []; ...
    {'D.bmp','B.bmp'}, [5 5; -5 -5], 1, []; ...
    '', [], 60, 100; };

scene = create_scene(img,fixation_point);

% task
run_scene(scene);
set_iti(500);
